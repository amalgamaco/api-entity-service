image: node:18-alpine

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: default
  CACHE_COMPRESSION_LEVEL: fast
  TRANSFER_METER_FREQUENCY: 5s

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

cache: &global_cache
  - key:
      files:
        - Gemfile.lock
      prefix: $CI_PROJECT_TITLE
    paths:
      - vendor/ruby
  - key:
      files:
        - yarn.lock
      prefix: $CI_PROJECT_TITLE
    paths:
      - node_modules/

before_script:
  - mkdir -p reports/

stages:
  - build
  - lint
  - test
  - sonar

yarn:
  stage: build
  cache:
    untracked: true
  script:
    - yarn install
  tags:
    - docker
  artifacts:
    paths:
      - reports/

run_linter:
  stage: lint
  cache:
    untracked: true
    policy: pull
  script:
    - yarn install
    - yarn lint
  tags:
    - docker

run_unit_tests:
  stage: test
  cache:
    untracked: true
    policy: pull
  script:
    - yarn install
    - yarn test --ci --forceExit --detectOpenHandles
  tags:
    - docker
  coverage: /All files\s*\|\s*([\d\.]+)/
  artifacts:
    paths:
      - reports/
    reports:
      junit:
        - reports/junit.xml
      cobertura: reports/coverage/cobertura-coverage.xml

upload_to_sonar:
  stage: sonar
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    - key: "${CI_JOB_NAME}"
      paths:
        - .sonar/cache
  script:
    - sed -i.bk 's/SF:.*\/api-entity-service\/\(.*\)/SF:\1/' reports/coverage/lcov.info
    - sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true
  tags:
    - docker
  needs:
    - job: run_unit_tests
      artifacts: true
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main' || $CI_PIPELINE_SOURCE == 'merge_request_event'
